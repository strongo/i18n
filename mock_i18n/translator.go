// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/strongo/i18n (interfaces: Translator)
//
// Generated by this command:
//
//	mockgen github.com/strongo/i18n Translator
//

// Package mock_i18n is a generated GoMock package.
package mock_i18n

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockTranslator is a mock of Translator interface.
type MockTranslator struct {
	ctrl     *gomock.Controller
	recorder *MockTranslatorMockRecorder
	isgomock struct{}
}

// MockTranslatorMockRecorder is the mock recorder for MockTranslator.
type MockTranslatorMockRecorder struct {
	mock *MockTranslator
}

// NewMockTranslator creates a new mock instance.
func NewMockTranslator(ctrl *gomock.Controller) *MockTranslator {
	mock := &MockTranslator{ctrl: ctrl}
	mock.recorder = &MockTranslatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTranslator) EXPECT() *MockTranslatorMockRecorder {
	return m.recorder
}

// Translate mocks base method.
func (m *MockTranslator) Translate(key, locale string, args ...any) string {
	m.ctrl.T.Helper()
	varargs := []any{key, locale}
	for _, a := range args {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Translate", varargs...)
	ret0, _ := ret[0].(string)
	return ret0
}

// Translate indicates an expected call of Translate.
func (mr *MockTranslatorMockRecorder) Translate(key, locale any, args ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{key, locale}, args...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Translate", reflect.TypeOf((*MockTranslator)(nil).Translate), varargs...)
}

// TranslateNoWarning mocks base method.
func (m *MockTranslator) TranslateNoWarning(key, locale string, args ...any) string {
	m.ctrl.T.Helper()
	varargs := []any{key, locale}
	for _, a := range args {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "TranslateNoWarning", varargs...)
	ret0, _ := ret[0].(string)
	return ret0
}

// TranslateNoWarning indicates an expected call of TranslateNoWarning.
func (mr *MockTranslatorMockRecorder) TranslateNoWarning(key, locale any, args ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{key, locale}, args...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TranslateNoWarning", reflect.TypeOf((*MockTranslator)(nil).TranslateNoWarning), varargs...)
}

// TranslateWithMap mocks base method.
func (m *MockTranslator) TranslateWithMap(key, locale string, args map[string]string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "TranslateWithMap", key, locale, args)
	ret0, _ := ret[0].(string)
	return ret0
}

// TranslateWithMap indicates an expected call of TranslateWithMap.
func (mr *MockTranslatorMockRecorder) TranslateWithMap(key, locale, args any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "TranslateWithMap", reflect.TypeOf((*MockTranslator)(nil).TranslateWithMap), key, locale, args)
}
